#!/usr/bin/env node

var fs = require('fs')
  , html5pdf = require('../')
  , program = require('commander')

program.version(require('../package.json').version)
  .usage('[options] <markdown-file-path>')
  .option('<html-file-path>', "Path of the html file to convert")
  .option('-p, --phantom-path [path]', "Path to phantom binary")
  .option('-h, --runnings-path [path]', "Path to runnings (header, footer)")
  .option('-s, --css-path [path]', "Path to custom CSS file")
  .option('-z, --highlight-css-path [path]', "Path to custom highlight-CSS file")
  .option('-f, --paper-format [format]', "'A3', 'A4', 'A5', 'Legal', 'Letter' or 'Tabloid'")
  .option('-r, --paper-orientation [orientation]', "'portrait' or 'landscape'")
  .option('-b, --paper-border [measurement]', "Supported dimension units are: 'mm', 'cm', 'in', 'px'")
  .option('-d, --render-delay [millis]', "Delay before rendering the PDF (give HTML and CSS a chance to load)")
  .option('-o, --out [path]', "Path of where to save the PDF")
  .option('-t, --template [string]', "Template to use (html5bp or htmlbootstrap)")
  .parse(process.argv)

program.out = program.out || program.args[0].replace(/\.html/g, "") + ".pdf"

var opts = {
    phantomPath: program.phantomPath
  , runningsPath: program.runningsPath
  , cssPath: program.cssPath
  , highlightCssPath: program.highlightCssPath
  , paperFormat: program.paperFormat
  , paperOrientation: program.paperOrientation
  , paperBorder: program.paperBorder
  , renderDelay: program.renderDelay
  , template: program.template || 'html5bp'
}

html5pdf(opts).from(program.args[0]).to(program.out, function (er) {
  fs.realpath(program.out, function (er, path) {
    if (er) return console.error(er)
    console.log("Created PDF file at", path)
  })
})
